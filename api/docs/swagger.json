{
  "swagger": "2.0",
  "info": {
    "title": "Go-Micro-Services API",
    "description": "Go-Micro-Services is a POS API developed using microservices architecture. This API provides authentication, user management, product handling, and order processing functionalities.",
    "version": "1.0.0",
    "contact": {
      "name": "Developer",
      "email": "azzam.sykir.work@gmail.com"
    }
  },
  "externalDocs": {
    "description": "GitHub Repository",
    "url": "https://github.com/AzzamSyakir/go-micro-services"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "schemes": ["http", "https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter 'Bearer {token}' to authenticate requests."
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Endpoints related to user authentication, including login, registration, and token management."
    },
    {
      "name": "Users",
      "description": "User management endpoints."
    },
    {
      "name": "Products",
      "description": "Endpoints for managing products."
    },
    {
      "name": "Categories",
      "description": "Endpoints for managing product categories."
    },
    {
      "name": "Orders",
      "description": "Endpoints for order processing."
    }
  ],
  "paths": {
    "/auths/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "operationId": "registerUser",
        "description": "Creates a new user account with email, name, and password.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "Example User" },
                "email": { "type": "string", "example": "example.user@example.com" },
                "password": { "type": "string", "example": "examplePassword123" }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": { "type": "integer", "example": 201 },
                "message": { "type": "string", "example": "UserUseCase Register is succeed." },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "uuid-created-user" },
                    "name": { "type": "string", "example": "Example User" },
                    "email": { "type": "string", "example": "example.user@example.com" },
                    "password": { "type": "string", "example": "hashed-password-example" },
                    "balance": { "type": "integer", "example": 0 },
                    "created_at": { "type": "string", "example": "2025-01-29T12:00:00Z" },
                    "updated_at": { "type": "string", "example": "2025-01-29T12:00:00Z" }
                  }
                }
              }
            }
          },
          "400": { "description": "Invalid request" }
        }
      }
    },
    "/auths/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User login",
        "operationId": "loginUser",
        "description": "Authenticates the user and returns a JWT token.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string", "example": "example.user@example.com" },
                "password": { "type": "string", "example": "examplePassword123" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "type": "object",
              "properties": {
                "code": { "type": "integer", "example": 200 },
                "message": { "type": "string", "example": "AuthUseCase Login is succeed" },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "uuid-login-user" },
                    "user_id": { "type": "string", "example": "uuid-user-id" },
                    "access_token": { "type": "string", "example": "example-access-token" },
                    "refresh_token": { "type": "string", "example": "example-refresh-token" },
                    "access_token_expired_at": { "type": "string", "example": "2025-01-31T12:00:00Z" },
                    "refresh_token_expired_at": { "type": "string", "example": "2025-02-15T12:00:00Z" },
                    "created_at": { "type": "string", "example": "2025-01-29T11:00:00Z" },
                    "updated_at": { "type": "string", "example": "2025-01-29T11:30:00Z" }
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Retrieve all users",
        "operationId": "getAllUsers",
        "description": "Returns a list of all registered users.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "schema": {
              "type": "object",
              "properties": {
                "code": { "type": "integer", "example": 200 },
                "message": { "type": "string", "example": "User UseCase ListUser is succeed." },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user by ID",
        "operationId": "getUserById",
        "description": "Retrieves user details based on the provided ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "uuid-user-id"
          }
        ],
        "responses": {
          "200": {
            "description": "User details",
            "schema": {
              "type": "object",
              "properties": {
                "code": { "type": "integer", "example": 200 },
                "message": { "type": "string", "example": "User UseCase GetOneById is succeed." },
                "data": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "404": { "description": "User not found" }
        }
      }
    },
    "/categories": {
      "post": {
        "tags": ["Categories"],
        "summary": "Create a new category",
        "operationId": "createCategory",
        "description": "Registers a new category.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "Example Category" }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Category created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": { "type": "integer", "example": 201 },
                "message": { "type": "string", "example": "CategoryUseCase Register is succeed." },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "uuid-category-id" },
                    "name": { "type": "string", "example": "Example Category" },
                    "created_at": { "type": "string", "example": "2025-02-03T06:17:52Z" },
                    "updated_at": { "type": "string", "example": "2025-02-03T06:17:52Z" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get category by ID",
        "operationId": "getCategoryById",
        "description": "Retrieves category details based on the provided ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "uuid-category-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Category details",
            "schema": {
              "type": "object",
              "properties": {
                "code": { "type": "integer", "example": 200 },
                "message": { "type": "string", "example": "CategoryUseCase GetProductById is succeed." },
                "data": {
                  "$ref": "#/definitions/Category"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Categories"],
        "summary": "Update an existing category",
        "operationId": "updateCategory",
        "description": "Updates an existing category by ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "uuid-category-id"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "Updated Category" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": { "type": "integer", "example": 200 },
                "message": { "type": "string", "example": "CategoryUseCase UpdateCategory is succeed." },
                "data": {
                  "$ref": "#/definitions/Category"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Categories"],
        "summary": "Delete a category",
        "operationId": "deleteCategory",
        "description": "Deletes a category by ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "uuid-category-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": { "type": "integer", "example": 200 },
                "message": { "type": "string", "example": "CategoryUseCase DeleteCategory is succeed." },
                "data": {
                  "$ref": "#/definitions/Category"
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "post": {
        "tags": ["Products"],
        "summary": "Create a new product",
        "operationId": "createProduct",
        "description": "Creates a new product.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "sku": { "type": "string", "example": "SKU-EXAMPLE" },
                "name": { "type": "string", "example": "Example Product" },
                "stock": { "type": "integer", "example": 100 },
                "price": { "type": "integer", "example": 7000 },
                "category_id": { "type": "string", "example": "uuid-category-id" }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": { "type": "integer", "example": 201 },
                "message": { "type": "string", "example": "ProductUseCase CreateProduct is success" },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "uuid-product-id" },
                    "sku": { "type": "string", "example": "SKU-EXAMPLE" },
                    "name": { "type": "string", "example": "Example Product" },
                    "stock": { "type": "integer", "example": 100 },
                    "price": { "type": "integer", "example": 7000 },
                    "category_id": { "type": "string", "example": "uuid-category-id" },
                    "created_at": { "type": "string", "example": "2025-02-03T06:22:36Z" },
                    "updated_at": { "type": "string", "example": "2025-02-03T06:22:36Z" }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Products"],
        "summary": "Retrieve all products",
        "operationId": "getAllProducts",
        "description": "Returns a list of all products.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of products",
            "schema": {
              "type": "object",
              "properties": {
                "code": { "type": "integer", "example": 200 },
                "message": { "type": "string", "example": "product-service UseCase, ListProduct is succeed." },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Product"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get product by ID",
        "operationId": "getProductById",
        "description": "Retrieves product details based on the provided ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "uuid-product-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Product details",
            "schema": {
              "type": "object",
              "properties": {
                "code": { "type": "integer", "example": 200 },
                "message": { "type": "string", "example": "product-service UseCase, DetailProduct is succeed." },
                "data": {
                  "$ref": "#/definitions/Product"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Products"],
        "summary": "Update an existing product",
        "operationId": "updateProduct",
        "description": "Updates an existing product by ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "uuid-product-id"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "sku": { "type": "string", "example": "SKU-UPDATED" },
                "name": { "type": "string", "example": "Updated Example Product" },
                "stock": { "type": "integer", "example": 150 },
                "price": { "type": "integer", "example": 8000 },
                "category_id": { "type": "string", "example": "uuid-category-id" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": { "type": "integer", "example": 200 },
                "message": { "type": "string", "example": "product-service UseCase Update Product is success." },
                "data": {
                  "$ref": "#/definitions/Product"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Products"],
        "summary": "Delete a product",
        "operationId": "deleteProduct",
        "description": "Deletes a product by ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "uuid-product-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": { "type": "integer", "example": 200 },
                "message": { "type": "string", "example": "product-service UseCase DeleteProduct is succeed." },
                "data": {
                  "$ref": "#/definitions/Product"
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "post": {
        "tags": ["Orders"],
        "summary": "Create a new order",
        "operationId": "createOrder",
        "description": "Creates a new order.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user_id": { "type": "string", "example": "uuid-user-id" },
                "products": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "product_id": { "type": "string", "example": "uuid-product-id" },
                      "qty": { "type": "integer", "example": 1 }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Order created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": { "type": "integer", "example": 201 },
                "message": { "type": "string", "example": "orderUseCase success, order is success" },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "uuid-order-id" },
                    "user_id": { "type": "string", "example": "uuid-user-id" },
                    "receipt_code": { "type": "string", "example": "RECEIPT-123" },
                    "total_price": { "type": "integer", "example": 14000 },
                    "total_paid": { "type": "integer", "example": 20000 },
                    "total_return": { "type": "integer", "example": 6000 },
                    "created_at": { "type": "string", "example": "2025-02-03T06:46:36Z" },
                    "updated_at": { "type": "string", "example": "2025-02-03T06:46:36Z" },
                    "products": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string", "example": "uuid-product-item-id" },
                          "user_id": { "type": "string", "example": "uuid-user-id" },
                          "product_id": { "type": "string", "example": "uuid-product-id" },
                          "total_price": { "type": "integer", "example": 14000 },
                          "qty": { "type": "integer", "example": 1 },
                          "created_at": { "type": "string", "example": "2025-02-03T06:46:36Z" },
                          "updated_at": { "type": "string", "example": "2025-02-03T06:46:36Z" }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Orders"],
        "summary": "Retrieve all orders",
        "operationId": "getAllOrders",
        "description": "Returns a list of all orders.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of orders",
            "schema": {
              "type": "object",
              "properties": {
                "code": { "type": "integer", "example": 200 },
                "message": { "type": "string", "example": "orderUseCase ListOrder is succeed." },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Order"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get order by ID",
        "operationId": "getOrderById",
        "description": "Retrieves order details based on the provided ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "uuid-order-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Order details",
            "schema": {
              "type": "object",
              "properties": {
                "code": { "type": "integer", "example": 200 },
                "message": { "type": "string", "example": "order-service, DetailOrder is succeed." },
                "data": {
                  "$ref": "#/definitions/Order"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "example": "uuid-user-id" },
        "name": { "type": "string", "example": "Example User" },
        "email": { "type": "string", "example": "example.user@example.com" },
        "balance": { "type": "integer", "example": 0 },
        "created_at": { "type": "string", "example": "2025-01-29T11:23:30Z" },
        "updated_at": { "type": "string", "example": "2025-01-29T11:23:30Z" }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "example": "uuid-category-id" },
        "name": { "type": "string", "example": "Example Category" },
        "created_at": { "type": "string", "example": "2025-02-03T06:17:52Z" },
        "updated_at": { "type": "string", "example": "2025-02-03T06:17:52Z" }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "example": "uuid-product-id" },
        "sku": { "type": "string", "example": "SKU-EXAMPLE" },
        "name": { "type": "string", "example": "Example Product" },
        "stock": { "type": "integer", "example": 100 },
        "price": { "type": "integer", "example": 7000 },
        "category_id": { "type": "string", "example": "uuid-category-id" },
        "created_at": { "type": "string", "example": "2025-02-03T06:22:36Z" },
        "updated_at": { "type": "string", "example": "2025-02-03T06:22:36Z" }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "example": "uuid-order-id" },
        "user_id": { "type": "string", "example": "uuid-user-id" },
        "receipt_code": { "type": "string", "example": "RECEIPT-123" },
        "total_price": { "type": "integer", "example": 14000 },
        "total_paid": { "type": "integer", "example": 20000 },
        "total_return": { "type": "integer", "example": 6000 },
        "created_at": { "type": "string", "example": "2025-02-03T06:46:36Z" },
        "updated_at": { "type": "string", "example": "2025-02-03T06:46:36Z" },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": { "type": "string", "example": "uuid-product-item-id" },
              "user_id": { "type": "string", "example": "uuid-user-id" },
              "product_id": { "type": "string", "example": "uuid-product-id" },
              "total_price": { "type": "integer", "example": 14000 },
              "qty": { "type": "integer", "example": 1 },
              "created_at": { "type": "string", "example": "2025-02-03T06:46:36Z" },
              "updated_at": { "type": "string", "example": "2025-02-03T06:46:36Z" }
            }
          }
        }
      }
    }
  }
}