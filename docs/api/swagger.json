{
  "swagger": "2.0",
  "info": {
    "title": "Go-Micro-Services API",
    "description": "Go-Micro-Services is a POS API developed using microservices architecture. This API provides authentication, user management, product handling, and order processing functionalities.",
    "version": "1.0.0",
    "contact": {
      "name": "Developer",
      "email": "azzam.sykir.work@gmail.com"
    }
  },
  "externalDocs": {
    "description": "GitHub Repository",
    "url": "https://github.com/AzzamSyakir/go-micro-services"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter 'Bearer {token}' to authenticate requests."
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Endpoints related to user authentication, including login, registration, and token management."
    },
    {
      "name": "Users",
      "description": "User management endpoints."
    },
    {
      "name": "Categories",
      "description": "Endpoints for managing product categories."
    },
    {
      "name": "Products",
      "description": "Endpoints for managing products."
    },
    {
      "name": "Orders",
      "description": "Endpoints for order processing."
    }
  ],
  "paths": {
    "/auths/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register a new user",
        "operationId": "registerUser",
        "description": "Creates a new user account with email, name, and password.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User information to register",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Example User"
                },
                "email": {
                  "type": "string",
                  "example": "example.user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "examplePassword123"
                }
              },
              "required": [
                "name",
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "example": "User successfully registered."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "b740369b-8957-4f36-b7ed-b0b8e1d07caf"
                    },
                    "name": {
                      "type": "string",
                      "example": "created name"
                    },
                    "email": {
                      "type": "string",
                      "example": "created-email@gmail.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "$2a$10$wHCIdkxeK91Kmup0Pjt6xeu3rtqm7NXeiVbAgO5Q1z/wCkznWlTSi"
                    },
                    "balance": {
                      "type": "integer",
                      "example": 0
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T02:39:54.741292669Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T02:39:54.741292669Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/auths/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User login",
        "operationId": "loginUser",
        "description": "Authenticates the user and returns a JWT token.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "example.user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "examplePassword123"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Login successful."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "7cc3fa6b-d43c-4d7c-95fc-bdbe1a714d30"
                    },
                    "user_id": {
                      "type": "string",
                      "example": "b740369b-8957-4f36-b7ed-b0b8e1d07caf"
                    },
                    "access_token": {
                      "type": "string",
                      "example": "43864ba1-c69a-44ea-a5b8-0eeedac4a749"
                    },
                    "refresh_token": {
                      "type": "string",
                      "example": "b7759332-67f4-4e59-93a5-45c725a4affd"
                    },
                    "access_token_expired_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T02:54:19.343068395Z"
                    },
                    "refresh_token_expired_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-05T02:44:19.343068395Z"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T02:44:19.343068395Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T02:44:19.343068395Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auths/access-token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Create New Access Token for User",
        "operationId": "createNewAccessToken",
        "description": "Creates a new access token for the user so they can interact with other endpoints.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "example.user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "examplePassword123"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New access token generated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "New access token generated successfully."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "7cc3fa6b-d43c-4d7c-95fc-bdbe1a714d30"
                    },
                    "user_id": {
                      "type": "string",
                      "example": "b740369b-8957-4f36-b7ed-b0b8e1d07caf"
                    },
                    "access_token": {
                      "type": "string",
                      "example": "101cc63d-d875-4d32-be2a-3a5ae8073b28"
                    },
                    "refresh_token": {
                      "type": "string",
                      "example": "b7759332-67f4-4e59-93a5-45c725a4affd"
                    },
                    "access_token_expired_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T02:54:19.343068Z"
                    },
                    "refresh_token_expired_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-05T02:44:19.343068Z"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T02:44:19.343068Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T02:49:17.20982664Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/auths/Logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logout",
        "operationId": "LogoutUser",
        "description": "Logout current user or delete session data.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "Access token for the user",
            "x-example": "Bearer 8d15c260-2c91-4599-8eb2-9886568a2b11"
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Logout successful."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "7cc3fa6b-d43c-4d7c-95fc-bdbe1a714d30"
                    },
                    "user_id": {
                      "type": "string",
                      "example": "b740369b-8957-4f36-b7ed-b0b8e1d07caf"
                    },
                    "access_token": {
                      "type": "string",
                      "example": "101cc63d-d875-4d32-be2a-3a5ae8073b28"
                    },
                    "refresh_token": {
                      "type": "string",
                      "example": "b7759332-67f4-4e59-93a5-45c725a4affd"
                    },
                    "access_token_expired_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T02:54:19.343068Z"
                    },
                    "refresh_token_expired_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-05T02:44:19.343068Z"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T02:44:19.343068Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T02:49:17.209827Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/auths/list-sessions": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get user session data",
        "operationId": "ListSessions",
        "description": "Retrieve user session data. Requires authentication with a Bearer Token. Disclaimer: This endpoint is for showcase purposes only and will not be used in real-world scenarios.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved all active sessions.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Successfully retrieved all active sessions."
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "558efd0e-f6a1-44b8-8b24-30c52c805e7f"
                      },
                      "user_id": {
                        "type": "string",
                        "example": "8d59e693-64c2-428b-bc33-7b98ecf6ce7c"
                      },
                      "access_token": {
                        "type": "string",
                        "example": "14f4e1b6-e28d-4371-9cb3-00065ede06a3"
                      },
                      "refresh_token": {
                        "type": "string",
                        "example": "c1805616-74b8-42d7-b851-1a77e9d073bb"
                      },
                      "access_token_expired_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-03T00:24:24.829355Z"
                      },
                      "refresh_token_expired_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-05T00:14:24.829355Z"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-03T00:14:24.829355Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-03T00:14:24.829355Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Token is missing or invalid"
          },
          "400": {
            "description": "Invalid request"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List all users",
        "operationId": "getAllUsers",
        "description": "Returns a list of all registered users.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all users.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Successfully retrieved all users."
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "b740369b-8957-4f36-b7ed-b0b8e1d07caf"
                      },
                      "name": {
                        "type": "string",
                        "example": "created name"
                      },
                      "email": {
                        "type": "string",
                        "example": "created-email@gmail.com"
                      },
                      "password": {
                        "type": "string",
                        "example": "$2a$10$wHCIdkxeK91Kmup0Pjt6xeu3rtqm7NXeiVbAgO5Q1z/wCkznWlTSi"
                      },
                      "balance": {
                        "type": "integer",
                        "example": 0
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-03T02:39:54.741293Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-03T02:39:54.741293Z"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/email/{email}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by Email",
        "operationId": "getUserByEmail",
        "description": "Get user details based on the provided Email.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "created-email@gmail.com"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully by email.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "User retrieved successfully by email."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "b740369b-8957-4f36-b7ed-b0b8e1d07caf"
                    },
                    "name": {
                      "type": "string",
                      "example": "created name"
                    },
                    "email": {
                      "type": "string",
                      "example": "created-email@gmail.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "$2a$10$wHCIdkxeK91Kmup0Pjt6xeu3rtqm7NXeiVbAgO5Q1z/wCkznWlTSi"
                    },
                    "balance": {
                      "type": "integer",
                      "example": 0
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T02:39:54.741293Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T02:39:54.741293Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by ID",
        "operationId": "getUserById",
        "description": "Get user details based on the provided user ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "b740369b-8957-4f36-b7ed-b0b8e1d07caf"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "User retrieved successfully."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "b740369b-8957-4f36-b7ed-b0b8e1d07caf"
                    },
                    "name": {
                      "type": "string",
                      "example": "created name"
                    },
                    "email": {
                      "type": "string",
                      "example": "created-email@gmail.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "$2a$10$wHCIdkxeK91Kmup0Pjt6xeu3rtqm7NXeiVbAgO5Q1z/wCkznWlTSi"
                    },
                    "balance": {
                      "type": "integer",
                      "example": 0
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T02:39:54.741293Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T02:39:54.741293Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user details",
        "operationId": "updateUser",
        "description": "Update user details based on the provided user ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "b740369b-8957-4f36-b7ed-b0b8e1d07caf"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "created name"
                },
                "email": {
                  "type": "string",
                  "example": "created-email@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "$2a$10$wHCIdkxeK91Kmup0Pjt6xeu3rtqm7NXeiVbAgO5Q1z/wCkznWlTSi"
                },
                "balance": {
                  "type": "integer",
                  "example": 10000000
                }
              },
              "required": [
                "name",
                "email",
                "balance"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "User updated successfully."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "b740369b-8957-4f36-b7ed-b0b8e1d07caf"
                    },
                    "name": {
                      "type": "string",
                      "example": "created name"
                    },
                    "email": {
                      "type": "string",
                      "example": "created-email@gmail.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "$2a$10$wHCIdkxeK91Kmup0Pjt6xeu3rtqm7NXeiVbAgO5Q1z/wCkznWlTSi"
                    },
                    "balance": {
                      "type": "integer",
                      "example": 10000000
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T02:39:54.741293Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T03:54:01.051294888Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user",
        "operationId": "deleteUser",
        "description": "Delete user based on the provided user ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "b740369b-8957-4f36-b7ed-b0b8e1d07caf"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "User with ID b740369b-8957-4f36-b7ed-b0b8e1d07caf has been successfully deleted."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "b740369b-8957-4f36-b7ed-b0b8e1d07caf"
                    },
                    "name": {
                      "type": "string",
                      "example": "created name"
                    },
                    "email": {
                      "type": "string",
                      "example": "created-email@gmail.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "$2a$10$wHCIdkxeK91Kmup0Pjt6xeu3rtqm7NXeiVbAgO5Q1z/wCkznWlTSi"
                    },
                    "balance": {
                      "type": "integer",
                      "example": 10000000
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T02:39:54.741293Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-03T03:54:01.051295Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/categories": {
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Create a new category",
        "operationId": "createCategory",
        "description": "Registers a new category.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Example Category"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Category created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "example": "CategoryUseCase Register is succeed."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "uuid-category-id"
                    },
                    "name": {
                      "type": "string",
                      "example": "Example Category"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2025-02-03T06:17:52Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2025-02-03T06:17:52Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get List Category",
        "operationId": "ListCategories",
        "description": "retrioeve a list of categories.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "CategoryUseCase ListCategory is Succed",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "CategoryUseCase ListCategory is Succed"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "uuid-category-id"
                    },
                    "name": {
                      "type": "string",
                      "example": "Example Category"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2025-02-03T06:17:52Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2025-02-03T06:17:52Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get category by ID",
        "operationId": "getCategoryById",
        "description": "Retrieves category details based on the provided ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "uuid-category-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Category details",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "CategoryUseCase GetProductById is succeed."
                },
                "data": {
                  "$ref": "#/definitions/Category"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Categories"
        ],
        "summary": "Update an existing category",
        "operationId": "updateCategory",
        "description": "Updates an existing category by ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "uuid-category-id"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Updated Category"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "CategoryUseCase UpdateCategory is succeed."
                },
                "data": {
                  "$ref": "#/definitions/Category"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Delete a category",
        "operationId": "deleteCategory",
        "description": "Deletes a category by ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "uuid-category-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "CategoryUseCase DeleteCategory is succeed."
                },
                "data": {
                  "$ref": "#/definitions/Category"
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a new product",
        "operationId": "createProduct",
        "description": "Creates a new product.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "sku": {
                  "type": "string",
                  "example": "SKU-EXAMPLE"
                },
                "name": {
                  "type": "string",
                  "example": "Example Product"
                },
                "stock": {
                  "type": "integer",
                  "example": 100
                },
                "price": {
                  "type": "integer",
                  "example": 7000
                },
                "category_id": {
                  "type": "string",
                  "example": "uuid-category-id"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "example": "ProductUseCase CreateProduct is success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "uuid-product-id"
                    },
                    "sku": {
                      "type": "string",
                      "example": "SKU-EXAMPLE"
                    },
                    "name": {
                      "type": "string",
                      "example": "Example Product"
                    },
                    "stock": {
                      "type": "integer",
                      "example": 100
                    },
                    "price": {
                      "type": "integer",
                      "example": 7000
                    },
                    "category_id": {
                      "type": "string",
                      "example": "uuid-category-id"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2025-02-03T06:22:36Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2025-02-03T06:22:36Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Retrieve all products",
        "operationId": "getAllProducts",
        "description": "Returns a list of all products.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of products",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "product-service UseCase, ListProduct is succeed."
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Product"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get product by ID",
        "operationId": "getProductById",
        "description": "Retrieves product details based on the provided ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "uuid-product-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Product details",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "product-service UseCase, DetailProduct is succeed."
                },
                "data": {
                  "$ref": "#/definitions/Product"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update an existing product",
        "operationId": "updateProduct",
        "description": "Updates an existing product by ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "uuid-product-id"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "sku": {
                  "type": "string",
                  "example": "SKU-UPDATED"
                },
                "name": {
                  "type": "string",
                  "example": "Updated Example Product"
                },
                "stock": {
                  "type": "integer",
                  "example": 150
                },
                "price": {
                  "type": "integer",
                  "example": 8000
                },
                "category_id": {
                  "type": "string",
                  "example": "uuid-category-id"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "product-service UseCase Update Product is success."
                },
                "data": {
                  "$ref": "#/definitions/Product"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a product",
        "operationId": "deleteProduct",
        "description": "Deletes a product by ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "uuid-product-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "product-service UseCase DeleteProduct is succeed."
                },
                "data": {
                  "$ref": "#/definitions/Product"
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Create a new order",
        "operationId": "createOrder",
        "description": "Creates a new order.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "string",
                  "example": "uuid-user-id"
                },
                "products": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "product_id": {
                        "type": "string",
                        "example": "uuid-product-id"
                      },
                      "qty": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Order created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "example": "orderUseCase success, order is success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "uuid-order-id"
                    },
                    "user_id": {
                      "type": "string",
                      "example": "uuid-user-id"
                    },
                    "receipt_code": {
                      "type": "string",
                      "example": "RECEIPT-123"
                    },
                    "total_price": {
                      "type": "integer",
                      "example": 14000
                    },
                    "total_paid": {
                      "type": "integer",
                      "example": 20000
                    },
                    "total_return": {
                      "type": "integer",
                      "example": 6000
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2025-02-03T06:46:36Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2025-02-03T06:46:36Z"
                    },
                    "products": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "uuid-product-item-id"
                          },
                          "user_id": {
                            "type": "string",
                            "example": "uuid-user-id"
                          },
                          "product_id": {
                            "type": "string",
                            "example": "uuid-product-id"
                          },
                          "total_price": {
                            "type": "integer",
                            "example": 14000
                          },
                          "qty": {
                            "type": "integer",
                            "example": 1
                          },
                          "created_at": {
                            "type": "string",
                            "example": "2025-02-03T06:46:36Z"
                          },
                          "updated_at": {
                            "type": "string",
                            "example": "2025-02-03T06:46:36Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Retrieve all orders",
        "operationId": "getAllOrders",
        "description": "Returns a list of all orders.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of orders",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "orderUseCase ListOrder is succeed."
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Order"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get order by ID",
        "operationId": "getOrderById",
        "description": "Retrieves order details based on the provided ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "uuid-order-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Order details",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "order-service, DetailOrder is succeed."
                },
                "data": {
                  "$ref": "#/definitions/Order"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "uuid-user-id"
        },
        "name": {
          "type": "string",
          "example": "Example User"
        },
        "email": {
          "type": "string",
          "example": "example.user@example.com"
        },
        "balance": {
          "type": "integer",
          "example": 0
        },
        "created_at": {
          "type": "string",
          "example": "2025-01-29T11:23:30Z"
        },
        "updated_at": {
          "type": "string",
          "example": "2025-01-29T11:23:30Z"
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "uuid-category-id"
        },
        "name": {
          "type": "string",
          "example": "Example Category"
        },
        "created_at": {
          "type": "string",
          "example": "2025-02-03T06:17:52Z"
        },
        "updated_at": {
          "type": "string",
          "example": "2025-02-03T06:17:52Z"
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "uuid-product-id"
        },
        "sku": {
          "type": "string",
          "example": "SKU-EXAMPLE"
        },
        "name": {
          "type": "string",
          "example": "Example Product"
        },
        "stock": {
          "type": "integer",
          "example": 100
        },
        "price": {
          "type": "integer",
          "example": 7000
        },
        "category_id": {
          "type": "string",
          "example": "uuid-category-id"
        },
        "created_at": {
          "type": "string",
          "example": "2025-02-03T06:22:36Z"
        },
        "updated_at": {
          "type": "string",
          "example": "2025-02-03T06:22:36Z"
        }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "uuid-order-id"
        },
        "user_id": {
          "type": "string",
          "example": "uuid-user-id"
        },
        "receipt_code": {
          "type": "string",
          "example": "RECEIPT-123"
        },
        "total_price": {
          "type": "integer",
          "example": 14000
        },
        "total_paid": {
          "type": "integer",
          "example": 20000
        },
        "total_return": {
          "type": "integer",
          "example": 6000
        },
        "created_at": {
          "type": "string",
          "example": "2025-02-03T06:46:36Z"
        },
        "updated_at": {
          "type": "string",
          "example": "2025-02-03T06:46:36Z"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "uuid-product-item-id"
              },
              "user_id": {
                "type": "string",
                "example": "uuid-user-id"
              },
              "product_id": {
                "type": "string",
                "example": "uuid-product-id"
              },
              "total_price": {
                "type": "integer",
                "example": 14000
              },
              "qty": {
                "type": "integer",
                "example": 1
              },
              "created_at": {
                "type": "string",
                "example": "2025-02-03T06:46:36Z"
              },
              "updated_at": {
                "type": "string",
                "example": "2025-02-03T06:46:36Z"
              }
            }
          }
        }
      }
    }
  }
}