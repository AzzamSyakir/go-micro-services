{
  "swagger": "2.0",
  "info": {
    "title": "Go-Micro-Services API",
    "description": "Go-Micro-Services is a POS API developed using microservices architecture. This API provides authentication, user management, product handling, and order processing functionalities.",
    "version": "1.0.0",
    "contact": {
      "name": "Developer",
      "email": "azzam.sykir.work@gmail.com"
    }
  },
  "externalDocs": {
    "description": "GitHub Repository",
    "url": "https://github.com/AzzamSyakir/go-micro-services"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter 'Bearer {token}' to authenticate requests."
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Endpoints related to user authentication, including login, registration, and token management."
    },
    {
      "name": "Users",
      "description": "User management endpoints."
    },
    {
      "name": "Categories",
      "description": "Endpoints for managing product categories."
    },
    {
      "name": "Products",
      "description": "Endpoints for managing products."
    },
    {
      "name": "Orders",
      "description": "Endpoints for order processing."
    }
  ],
  "paths": {
    "/auths/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register a new user",
        "operationId": "registerUser",
        "description": "Creates a new user account with email, name, and password.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Example User"
                },
                "email": {
                  "type": "string",
                  "example": "example.user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "examplePassword123"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "example": "UserUseCase Register is succeed."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "uuid-created-user"
                    },
                    "name": {
                      "type": "string",
                      "example": "Example User"
                    },
                    "email": {
                      "type": "string",
                      "example": "example.user@example.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "hashed-password-example"
                    },
                    "balance": {
                      "type": "integer",
                      "example": 0
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2025-01-29T12:00:00Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2025-01-29T12:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/auths/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User login",
        "operationId": "loginUser",
        "description": "Authenticates the user and returns a JWT token.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "example.user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "examplePassword123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "AuthUseCase Login is succeed"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "uuid-login-user"
                    },
                    "user_id": {
                      "type": "string",
                      "example": "uuid-user-id"
                    },
                    "access_token": {
                      "type": "string",
                      "example": "example-access-token"
                    },
                    "refresh_token": {
                      "type": "string",
                      "example": "example-refresh-token"
                    },
                    "access_token_expired_at": {
                      "type": "string",
                      "example": "2025-01-31T12:00:00Z"
                    },
                    "refresh_token_expired_at": {
                      "type": "string",
                      "example": "2025-02-15T12:00:00Z"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2025-01-29T11:00:00Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2025-01-29T11:30:00Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auths/access-token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "GetNewAccessToken For User",
        "operationId": "GetNewAccessTokenForUser",
        "description": "Creates a new AccessToken For User, so user can interact with other Endpoints",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "example.user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "examplePassword123"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "AuthUseCase GetNewAccessToken is succeed."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "44c818a3-4e36-4fb3-924f-401008529225"
                    },
                    "user_id": {
                      "type": "string",
                      "example": "89a40ce8-34bc-4159-895a-8beb3e46da84"
                    },
                    "access_token": {
                      "type": "string",
                      "example": "8d15c260-2c91-4599-8eb2-9886568a2b11"
                    },
                    "refresh_token": {
                      "type": "string",
                      "example": "d918ddf8-7817-4ac4-9e5e-80f354b7edbc"
                    },
                    "access_token_expired_at": {
                      "type": "string",
                      "example": "2025-02-03T06:19:56.208272Z"
                    },
                    "refresh_token_expired_at": {
                      "type": "string",
                      "example": "2025-02-05T06:09:56.208272Z"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2025-02-03T06:09:56.208272Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2025-02-03T06:10:14.400485603Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/auths/Logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logout",
        "operationId": "LogoutUser",
        "description": "Logout CurrentUser or delete session data",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "Access token for the user",
            "x-example": "Bearer 8d15c260-2c91-4599-8eb2-9886568a2b11"
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "AuthUseCase Logout is succeed."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "44c818a3-4e36-4fb3-924f-401008529225"
                    },
                    "user_id": {
                      "type": "string",
                      "example": "89a40ce8-34bc-4159-895a-8beb3e46da84"
                    },
                    "access_token": {
                      "type": "string",
                      "example": "8d15c260-2c91-4599-8eb2-9886568a2b11"
                    },
                    "refresh_token": {
                      "type": "string",
                      "example": "d918ddf8-7817-4ac4-9e5e-80f354b7edbc"
                    },
                    "access_token_expired_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-02-03T06:19:56.208272Z"
                    },
                    "refresh_token_expired_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-02-05T06:09:56.208272Z"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-02-03T06:09:56.208272Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-02-03T06:10:14.400486Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/auths/list-sessions": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get user session data",
        "operationId": "ListSessions",
        "description": "Get user session data. Requires authentication with a Bearer Token.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User session retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "ListSessions request succeeded"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "example-session-uuid"
                    },
                    "user_id": {
                      "type": "string",
                      "example": "example-user-uuid"
                    },
                    "access_token": {
                      "type": "string",
                      "example": "example-access-token"
                    },
                    "access_token_expired_at": {
                      "type": "string",
                      "example": "2025-01-29T12:00:00Z"
                    },
                    "refresh_token": {
                      "type": "string",
                      "example": "example-refresh-token"
                    },
                    "refresh_token_expired_at": {
                      "type": "string",
                      "example": "2025-02-28T12:00:00Z"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2025-01-29T12:00:00Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2025-01-30T12:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Token is missing or invalid"
          },
          "400": {
            "description": "Invalid request"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List all users",
        "operationId": "getAllUsers",
        "description": "Returns a list of all registered users.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "User UseCase ListUser is succeed."
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by ID",
        "operationId": "getUserById",
        "description": "Get user details based on the provided ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "uuid-user-id"
          }
        ],
        "responses": {
          "200": {
            "description": "User details",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "User UseCase GetOneById is succeed."
                },
                "data": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/email/{email}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by Email",
        "operationId": "getUserByEmail",
        "description": "Get user details based on the provided Email.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "created-email@gmail.com"
          }
        ],
        "responses": {
          "200": {
            "description": "User details",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "User UseCase GetOneByEmail is succeed."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "e70e2a34-a0bc-498f-9029-438b70028848"
                    },
                    "name": {
                      "type": "string",
                      "example": "created name"
                    },
                    "email": {
                      "type": "string",
                      "example": "created-email@gmail.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "$2a$10$oW9OYzmvaEcuDnTraTXBiuy4YCDM9PoiNMXuNHT01DueY9YvwoPJO"
                    },
                    "balance": {
                      "type": "integer",
                      "example": 0
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-02-03T22:42:31.910586Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-02-03T22:42:31.910586Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user details",
        "operationId": "updateUser",
        "description": "Update user details based on the provided user ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "89a40ce8-34bc-4159-895a-8beb3e46da84"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "created name"
                },
                "email": {
                  "type": "string",
                  "example": "created-email@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "$2a$10$THF2ee9ZAjt22il.9F/vneYeplYWhxvIFSc/vna9TblaqHSs2iFY2"
                },
                "balance": {
                  "type": "integer",
                  "example": 10000000
                }
              },
              "required": [
                "name",
                "email",
                "balance"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "UserUserCase UpdateUser is succeed."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "89a40ce8-34bc-4159-895a-8beb3e46da84"
                    },
                    "name": {
                      "type": "string",
                      "example": "created name"
                    },
                    "email": {
                      "type": "string",
                      "example": "created-email@gmail.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "$2a$10$THF2ee9ZAjt22il.9F/vneYeplYWhxvIFSc/vna9TblaqHSs2iFY2"
                    },
                    "balance": {
                      "type": "integer",
                      "example": 10000000
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-02-03T06:09:44.369085Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-02-03T06:16:07.288545422Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user",
        "operationId": "deleteUser",
        "description": "Delete user based on the provided user ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "e70e2a34-a0bc-498f-9029-438b70028848"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "UserUserCase DeleteUser is succeed."
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/categories": {
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Create a new category",
        "operationId": "createCategory",
        "description": "Registers a new category.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Example Category"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Category created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "example": "CategoryUseCase Register is succeed."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "uuid-category-id"
                    },
                    "name": {
                      "type": "string",
                      "example": "Example Category"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2025-02-03T06:17:52Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2025-02-03T06:17:52Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get List Category",
        "operationId": "ListCategories",
        "description": "retrioeve a list of categories.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "CategoryUseCase ListCategory is Succed",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "CategoryUseCase ListCategory is Succed"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "uuid-category-id"
                    },
                    "name": {
                      "type": "string",
                      "example": "Example Category"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2025-02-03T06:17:52Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2025-02-03T06:17:52Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get category by ID",
        "operationId": "getCategoryById",
        "description": "Retrieves category details based on the provided ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "uuid-category-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Category details",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "CategoryUseCase GetProductById is succeed."
                },
                "data": {
                  "$ref": "#/definitions/Category"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Categories"
        ],
        "summary": "Update an existing category",
        "operationId": "updateCategory",
        "description": "Updates an existing category by ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "uuid-category-id"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Updated Category"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "CategoryUseCase UpdateCategory is succeed."
                },
                "data": {
                  "$ref": "#/definitions/Category"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Delete a category",
        "operationId": "deleteCategory",
        "description": "Deletes a category by ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "uuid-category-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "CategoryUseCase DeleteCategory is succeed."
                },
                "data": {
                  "$ref": "#/definitions/Category"
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a new product",
        "operationId": "createProduct",
        "description": "Creates a new product.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "sku": {
                  "type": "string",
                  "example": "SKU-EXAMPLE"
                },
                "name": {
                  "type": "string",
                  "example": "Example Product"
                },
                "stock": {
                  "type": "integer",
                  "example": 100
                },
                "price": {
                  "type": "integer",
                  "example": 7000
                },
                "category_id": {
                  "type": "string",
                  "example": "uuid-category-id"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "example": "ProductUseCase CreateProduct is success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "uuid-product-id"
                    },
                    "sku": {
                      "type": "string",
                      "example": "SKU-EXAMPLE"
                    },
                    "name": {
                      "type": "string",
                      "example": "Example Product"
                    },
                    "stock": {
                      "type": "integer",
                      "example": 100
                    },
                    "price": {
                      "type": "integer",
                      "example": 7000
                    },
                    "category_id": {
                      "type": "string",
                      "example": "uuid-category-id"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2025-02-03T06:22:36Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2025-02-03T06:22:36Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Retrieve all products",
        "operationId": "getAllProducts",
        "description": "Returns a list of all products.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of products",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "product-service UseCase, ListProduct is succeed."
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Product"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get product by ID",
        "operationId": "getProductById",
        "description": "Retrieves product details based on the provided ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "uuid-product-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Product details",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "product-service UseCase, DetailProduct is succeed."
                },
                "data": {
                  "$ref": "#/definitions/Product"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update an existing product",
        "operationId": "updateProduct",
        "description": "Updates an existing product by ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "uuid-product-id"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "sku": {
                  "type": "string",
                  "example": "SKU-UPDATED"
                },
                "name": {
                  "type": "string",
                  "example": "Updated Example Product"
                },
                "stock": {
                  "type": "integer",
                  "example": 150
                },
                "price": {
                  "type": "integer",
                  "example": 8000
                },
                "category_id": {
                  "type": "string",
                  "example": "uuid-category-id"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "product-service UseCase Update Product is success."
                },
                "data": {
                  "$ref": "#/definitions/Product"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a product",
        "operationId": "deleteProduct",
        "description": "Deletes a product by ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "uuid-product-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "product-service UseCase DeleteProduct is succeed."
                },
                "data": {
                  "$ref": "#/definitions/Product"
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Create a new order",
        "operationId": "createOrder",
        "description": "Creates a new order.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "string",
                  "example": "uuid-user-id"
                },
                "products": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "product_id": {
                        "type": "string",
                        "example": "uuid-product-id"
                      },
                      "qty": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Order created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "example": "orderUseCase success, order is success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "uuid-order-id"
                    },
                    "user_id": {
                      "type": "string",
                      "example": "uuid-user-id"
                    },
                    "receipt_code": {
                      "type": "string",
                      "example": "RECEIPT-123"
                    },
                    "total_price": {
                      "type": "integer",
                      "example": 14000
                    },
                    "total_paid": {
                      "type": "integer",
                      "example": 20000
                    },
                    "total_return": {
                      "type": "integer",
                      "example": 6000
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2025-02-03T06:46:36Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2025-02-03T06:46:36Z"
                    },
                    "products": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "uuid-product-item-id"
                          },
                          "user_id": {
                            "type": "string",
                            "example": "uuid-user-id"
                          },
                          "product_id": {
                            "type": "string",
                            "example": "uuid-product-id"
                          },
                          "total_price": {
                            "type": "integer",
                            "example": 14000
                          },
                          "qty": {
                            "type": "integer",
                            "example": 1
                          },
                          "created_at": {
                            "type": "string",
                            "example": "2025-02-03T06:46:36Z"
                          },
                          "updated_at": {
                            "type": "string",
                            "example": "2025-02-03T06:46:36Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Retrieve all orders",
        "operationId": "getAllOrders",
        "description": "Returns a list of all orders.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of orders",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "orderUseCase ListOrder is succeed."
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Order"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get order by ID",
        "operationId": "getOrderById",
        "description": "Retrieves order details based on the provided ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "uuid-order-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Order details",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "order-service, DetailOrder is succeed."
                },
                "data": {
                  "$ref": "#/definitions/Order"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "uuid-user-id"
        },
        "name": {
          "type": "string",
          "example": "Example User"
        },
        "email": {
          "type": "string",
          "example": "example.user@example.com"
        },
        "balance": {
          "type": "integer",
          "example": 0
        },
        "created_at": {
          "type": "string",
          "example": "2025-01-29T11:23:30Z"
        },
        "updated_at": {
          "type": "string",
          "example": "2025-01-29T11:23:30Z"
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "uuid-category-id"
        },
        "name": {
          "type": "string",
          "example": "Example Category"
        },
        "created_at": {
          "type": "string",
          "example": "2025-02-03T06:17:52Z"
        },
        "updated_at": {
          "type": "string",
          "example": "2025-02-03T06:17:52Z"
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "uuid-product-id"
        },
        "sku": {
          "type": "string",
          "example": "SKU-EXAMPLE"
        },
        "name": {
          "type": "string",
          "example": "Example Product"
        },
        "stock": {
          "type": "integer",
          "example": 100
        },
        "price": {
          "type": "integer",
          "example": 7000
        },
        "category_id": {
          "type": "string",
          "example": "uuid-category-id"
        },
        "created_at": {
          "type": "string",
          "example": "2025-02-03T06:22:36Z"
        },
        "updated_at": {
          "type": "string",
          "example": "2025-02-03T06:22:36Z"
        }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "uuid-order-id"
        },
        "user_id": {
          "type": "string",
          "example": "uuid-user-id"
        },
        "receipt_code": {
          "type": "string",
          "example": "RECEIPT-123"
        },
        "total_price": {
          "type": "integer",
          "example": 14000
        },
        "total_paid": {
          "type": "integer",
          "example": 20000
        },
        "total_return": {
          "type": "integer",
          "example": 6000
        },
        "created_at": {
          "type": "string",
          "example": "2025-02-03T06:46:36Z"
        },
        "updated_at": {
          "type": "string",
          "example": "2025-02-03T06:46:36Z"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "uuid-product-item-id"
              },
              "user_id": {
                "type": "string",
                "example": "uuid-user-id"
              },
              "product_id": {
                "type": "string",
                "example": "uuid-product-id"
              },
              "total_price": {
                "type": "integer",
                "example": 14000
              },
              "qty": {
                "type": "integer",
                "example": 1
              },
              "created_at": {
                "type": "string",
                "example": "2025-02-03T06:46:36Z"
              },
              "updated_at": {
                "type": "string",
                "example": "2025-02-03T06:46:36Z"
              }
            }
          }
        }
      }
    }
  }
}