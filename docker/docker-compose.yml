services:
  user-services:
    container_name: user-services
    build:
      context: ../.
      dockerfile: ./src/user-service/Dockerfile
    expose:
      - 8080
    ports:
     - ${USER_SERVICES_PORT}:${USER_SERVICES_PORT}
    depends_on:
      - user-db

  user-db:
    image: postgres:latest
    container_name: user-db
    restart: always
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: user_db
      PGPORT: ${POSTGRES_USER_PORT}
    expose:
      - 5430
    ports:
      - ${POSTGRES_USER_PORT}:${POSTGRES_USER_PORT}
    volumes:
      - ../db/postgres/user_db/migration:/docker-entrypoint-initdb.d

  product-db:
    image: postgres:latest
    container_name: product-db
    restart: always
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: product_db
      PGPORT: ${POSTGRES_PRODUCT_PORT}
    expose:
      - 5431
    ports:
      - ${POSTGRES_PRODUCT_PORT}:${POSTGRES_PRODUCT_PORT}
    volumes:
      - ../db/postgres/product_db/migration:/docker-entrypoint-initdb.d

  order-db:
    image: postgres:latest
    container_name: order-db
    restart: always
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: order_db
      PGPORT: ${POSTGRES_ORDER_PORT}
    expose:
      - 5432
    ports:
      - ${POSTGRES_ORDER_PORT}:${POSTGRES_ORDER_PORT}
    volumes:
      - ../db/postgres/order_db/migration:/docker-entrypoint-initdb.d
